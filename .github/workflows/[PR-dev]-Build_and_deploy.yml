name: Build & Deploy to Staging

on: 
  pull_request:
      types: 
        - closed
      branches:
         - dev

env:
  ARTIFACT_NAME: StudioGhibliMM-dev
  ARTIFACT_PATH: build-artifact
  AWS_REGION:
  AWS_CF_NAME_MAIN: 
  AWS_CF_TEMPLATE_MAIN:
  AWS_CF_NAME_TASK_DEF:
  AWS_CF_TEMPLATE_TASK_DEF:
  AWS_CF_TEMPLATE_TASK_DEF_JSON:
#  put pipeline variables here, including AWS secrets


jobs:
 build:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - name: Checkout_repository
        uses: actions/checkout@v4
        with:
           fetch-depth: 2

     
      - name: Install_Python
        run: | 
          sudo apt update
          sudo apt install python3
          
      # https://github.com/aws-actions/configure-aws-credentials
      - name: SetUp_AWS_Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          # etc.
      ### !!! We need to discuss the best approach here - there are a few options to authenticate with AWS and we need to settle on the 
      ###     best one for this project
      
      # build - cloudformation yaml (main.yaml?)
      # https://github.com/marketplace/actions/aws-cloudformation-deploy-cloudformation-stack-action-for-github-actions
      - name: CloudFormation_main
        uses: aws-actions/aws-cloudformation-github-deploy@v1.2.0
        with: 
          name: ${{ env.AWS_CF_NAME_MAIN }}
          template: ${{ env.AWS_CF_TEMPLATE_MAIN }}
          # etc.
      
   ### Change the following steps to use AWS rather than GH:
      # docker build & push 
      - name: Log_in_to_Docker_registry
        run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GIT_USERNAME }} --password-stdin

      # tweak to suit the specifics of our project:
      - name: Build_Docker_image
        run: |
          VERSION=${{ github.run_number }}-dev
          docker build --build-arg GIT_USERNAME=${{ secrets.GIT_USERNAME }} \
                 --build-arg GIT_TOKEN=${{ secrets.GIT_TOKEN }} \
                 --build-arg CERTIFICATE=${{ secrets.CERTIFICATE }} \
                 -t ghcr.io/${{ env.APP_NAME }}/${{ env.DOCKER_IMAGE_NAME }}:$VERSION

      - name: Push_Docker_image
        run: docker push ghcr.io/${{ env.APP_NAME }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}-dev

### Using AWS instead:
      - name: Log_out_of_Docker_registry
        run: docker logout ghcr.io
      
      - name: Install_Python
        run: | 
          sudo apt update
          sudo apt install python3

      - name: convert_yaml_to_json
        run: |
          python -c "import yaml, json, sys; print(json.dumps(yaml.safe_load(open('Task_def.yml'))))" > Task_def.json
       
      # task_def.yaml
      - name: CloudFormation_task_def
        uses: aws-actions/aws-cloudformation-github-deploy@v1.2.0
        with: 
          name: ${{ env.AWS_CF_NAME_TASK_DEF }}
          template: ${{ env.AWS_CF_TEMPLATE_TASK_DEF_JSON }}
          # etc.
   
    

    
    


      
